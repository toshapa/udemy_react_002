{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/error/error.gif","components/error/error.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hooks.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/ErrorBoundary/ErrorBoundary.js","resources/img/vision.png","pages/MainPages.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","resources/img/UW.png","resources/img/x-men.png","pages/ComicsPage.js","pages/Page404.js","pages/singleComic/SingleComic.js","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","style","_ref","color","isActive","_ref2","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","Offset","res","results","map","_transformCharacter","getCharacters","_callee2","id","_context2","getComics","_ref3","_callee3","offset","_context3","_comicsForm","_x2","getComic","_ref4","_callee4","_context4","console","log","_comicTransform","_x3","comics","urls","thumbnail","path","extension","title","price","prices","series","name","comic","_comic$textObjects$","descr","description","pageCount","lang","textObjects","language","char","slice","homePage","wiki","items","View","imgStyle","href","RandomChar","useEffect","UpdateChar","setChar","_useMarvelService","Math","floor","random","then","onCharLoaded","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","charEndead","setCharEndead","onRequestNewChar","load","newCharList","endead","_toConsumableArray","activeRed","useRef","onCheckedItems","e","b","onSelectedChar","current","forEach","classList","remove","add","focus","arr","character","item","i","ref","el","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","prevError","this","setState","Component","MainPages","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setNewComicsList","loadSpinner","onRequestNewListComcics","listOfComcics","onMouseEnter","toUpperCase","renderComcicsList","ComicsPage","Page404","textAlign","fontWeight","fontSize","marginTop","RenderComicView","SingleComic","comicId","useParams","setComic","updateComicPage","onComicLoaded","App","Router","Routes","Route","element","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.f3ca5d50.chunk.js","sourcesContent":["import './appHeader.scss';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <Link to='/'>\r\n                    <span>Marvel</span> information portal\r\n                </Link>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><NavLink to='/' style = {({ isActive }) => ({color : isActive ? \"#9f0013\" : ''})}>Characters</NavLink></li>\r\n                    /\r\n                    <li><NavLink  to='/comics' style = {({ isActive }) => ({color : isActive ? \"#9f0013\" : ''})}>Comics</NavLink></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return <img style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'contain',\r\n        margin: \"0 auto\"\r\n    }} src={img} alt='error'/>\r\n}\r\n\r\nexport default ErrorMessage","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hooks\"\r\n\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const {loading, error, request, clearError} = useHttp();\r\n\r\n\r\n    const _totalChar = 210\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public'\r\n    const _apiKey = 'apikey=12af9b7db3f6c23ab35369e22802b956'\r\n\r\n    // const getResorces = async (url) => {\r\n         \r\n    //     let res = await fetch(url)\r\n    //     if (!res.ok) {\r\n    //         throw new Error (`Could't fetch ${url}. status ${res.status}`)\r\n    //     }\r\n    //     return await res.json()\r\n    // }\r\n\r\n    const getAllCharacters = async (Offset = _totalChar) => {\r\n        const res = await request(`${_apiBase}/characters?limit=9&offset=${Offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter)\r\n    }\r\n\r\n    const getCharacters = async (id) => {\r\n        const res = await request(`${_apiBase}/characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0])\r\n        \r\n    }\r\n\r\n    const getComics = async (offset) => {\r\n        const res = await request(`${_apiBase}/comics?limit=${offset}&${_apiKey}`)\r\n        return res.data.results.map(_comicsForm)\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}/comics/${id}?${_apiKey}`)\r\n        console.log(res)\r\n        return _comicTransform(res.data.results[0])\r\n    }\r\n\r\n    const _comicsForm = (comics) => {\r\n        return {\r\n            url: comics.urls[0].url,\r\n            id: comics.id,\r\n            img: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\r\n            title: comics.title,\r\n            price: comics.prices[0].price,\r\n            alt: comics.series.name\r\n        }\r\n    }\r\n\r\n    const _comicTransform = (comic) => {\r\n        return {\r\n            img: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n            id: comic.id,\r\n            title: comic.title,\r\n            descr: comic.description || \"There is no description\",\r\n            pageCount: comic.pageCount ? `${comic.pageCount} p.` : \"No information about the number of pages\",\r\n            lang: comic.textObjects[0]?.language || \"en-us\",\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$` : \"not available\"\r\n        }\r\n    }\r\n\r\n    const _transformCharacter = (char) =>  {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homePage: char.urls[0].url,\r\n            wiki: char.urls[1].url, \r\n            comics: char.comics.items\r\n        }\r\n    }\r\n    return {getAllCharacters, getCharacters, loading, error, clearError, getComics, getComic }\r\n}\r\n\r\nexport default useMarvelService","import { useState, useCallback } from \"react\";\r\n\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [ loading, setLoading ] = useState(false);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-type' : 'application/json'}) => {\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch (url, {method, body, headers})\r\n            if (!response.ok) {\r\n                throw new Error (`Could ${url}, status: ${response.status}`)\r\n            }\r\n            const data = await response.json();\r\n            setLoading(false);\r\n            return data\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error.message)\r\n\r\n            throw error;\r\n        }\r\n    }, [])\r\n\r\n\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../spinner/Spinner'\r\nimport ErrorMessage from '../error/error'\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nconst RandomChar = () => {\r\n\r\n    \r\n    // componentDidMount() {\r\n    //     this.UpdateChar()\r\n    // }\r\n    \r\n\r\n    useEffect(() => {\r\n        UpdateChar();\r\n    },[]) \r\n\r\n\r\n    // state = {\r\n    //     char: {},\r\n    //     loading: true,\r\n    //     error: false\r\n    // }\r\n\r\n    const [char, setChar] = useState({});\r\n    // const [loading, setLoading] = useState(true);\r\n    // const [error, setError] = useState(false);\r\n\r\n\r\n    \r\n    const {loading, error, getCharacters, clearError} = useMarvelService()\r\n\r\n    const UpdateChar = () => {\r\n        clearError();\r\n        const id = Math.floor(Math.floor(Math.random() * (1011400 - 1011000) + 1011000))\r\n        getCharacters(id)\r\n            .then(onCharLoaded)\r\n            // .catch(onError)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n        // setLoading(false);\r\n\r\n        // this.setState({ \r\n        //     char,\r\n        //     loading: false\r\n        //     })\r\n    }\r\n\r\n    // const onError = () => {\r\n\r\n    //     setLoading(false);\r\n    //     setError(true);\r\n\r\n    //     // return this.setState({\r\n    //     //     loading: false, \r\n    //     //     error: true\r\n    //     //     })\r\n    // }\r\n\r\n        // const {char, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null\r\n        const spinner = loading ? <Spinner/> : null\r\n        const content = !(loading || error) ? <View char = {char}/>  : null\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"randomchar\">\r\n            {content}\r\n            {errorMessage} \r\n            {spinner} \r\n            \r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\"  onClick={UpdateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n\r\n    const {thumbnail, wiki, description, name, homePage} = char;\r\n    \r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n    \r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">{description}</p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homePage} className=\"button button__main\">\r\n                        <div className=\"inner\">Home Page</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner  from \"../spinner/Spinner.js\";\r\nimport ErrorMessage from '../error/error';\r\n\r\nimport './charList.scss';\r\nimport React from 'react';\r\n\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    // const [loading, setLoading] = useState(true);\r\n    // const [error, setError] = useState(false);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(1);\r\n    const [charEndead, setCharEndead] = useState(true);\r\n\r\n    // state = {\r\n    //     charList: [],\r\n    //     loading: false,\r\n    //     error: false,\r\n    //     newItemLoading: false,\r\n    //     offset: 1,\r\n    //     charEndead: false,\r\n    // }\r\n\r\n    const {loading, error, getAllCharacters} = useMarvelService();\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        return (() => onRequestNewChar(offset, true))\r\n    }, []);\r\n\r\n\r\n    // componentDidMount() {\r\n    //     this.onRequestNewChar()\r\n    // }\r\n    \r\n\r\n\r\n    const onRequestNewChar = (offset, load) => {\r\n        load ? setNewItemLoading(true) : setNewItemLoading(false)\r\n        // onCharListLoading()\r\n        // setNewItemLoading(true)\r\n        getAllCharacters(offset)\r\n            .then(onCharLoaded)\r\n            // .catch(onError)\r\n    }\r\n\r\n    const onCharLoaded = (newCharList) => {\r\n        let endead = false\r\n        if (newCharList.length < 9) {\r\n            endead = true\r\n        }\r\n        // this.setState(({offset, charList}) => ({\r\n        //     charList: [...charList, ...newCharList],\r\n        //     loading: false,\r\n        //     newItemLoading: false,\r\n        //     offset: offset + 9,\r\n        //     charEndead: endead\r\n        // }\r\n        // ))\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        // setLoading(false);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEndead(endead)\r\n    }\r\n\r\n    \r\n\r\n    // const onCharListLoading = () => {\r\n\r\n    //     setNewItemLoading(true);\r\n\r\n    //     // setState({\r\n    //     //     newItemLoading: true\r\n    //     // })\r\n    // }\r\n\r\n    // const onError = () => {\r\n    //     // return this.setState({\r\n    //     //     loading: false, \r\n    //     //     error: true\r\n    //     //     })\r\n\r\n    //     setError(true);\r\n    //     setLoading(loading => false)\r\n    // }\r\n\r\n    const activeRed = useRef([]);\r\n\r\n    // const pushActiveRedItems = (ref) => {\r\n    //     this.activeRed.push(ref)\r\n    // }\r\n\r\n    const onFocusItem = (id) => {\r\n        activeRed.current.forEach(items => {items.classList.remove('char__item_selected')})\r\n        activeRed.current[id].classList.add('char__item_selected')\r\n        activeRed.current[id].focus();\r\n    }\r\n\r\n    const onCheckedItems = (e,b) => {\r\n        props.onSelectedChar(e)\r\n        onFocusItem(b);\r\n\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        let character = arr.map((item, i) => {\r\n            \r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            let {id, thumbnail, name} = item\r\n            return (\r\n                <li className=\"char__item\" \r\n                key = {id}\r\n                // onClick = {() => {props.onSelectedChar(id)}}\r\n                onClick={() => onCheckedItems(id, i)}\r\n                ref = {el => activeRed.current[i] = el}\r\n                // onPointerEnter = {(e) => {\r\n                //     props.onSelectedChar(item.id)\r\n                //     onFocusItem(i)\r\n                // }}\r\n                >\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div className=\"char__name\">{name}</div>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {character}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n        \r\n    // const {charList, loading, error, newItemLoading, offset, charEndead} = this.state;\r\n    \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner/> : null;\r\n    // const content = !(loading || error) ? items : null;\r\n    console.log( loading, !newItemLoading)\r\n        return (\r\n            \r\n            <div className=\"char__list\">\r\n                    {items}\r\n                    {errorMessage}\r\n                    {spinner}\r\n                    {/* {content} */}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': charEndead ? 'none' : 'block'}}\r\n                    onClick={() => onRequestNewChar(offset)}\r\n                    >\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect}  from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../error/error';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\n\r\nimport './charInfo.scss';\r\n// import thor from '../../resources/img/thor.jpeg';\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    // const [loading, setLoading] = useState(false);\r\n    // const [error, setError] = useState(false);\r\n\r\n    // state = {\r\n    //     char: null,\r\n    //     loading: false,\r\n    //     error: false\r\n    // }\r\n    \r\n    const {loading, error, getCharacters, clearError} = useMarvelService();\r\n\r\n    // componentDidMount() {\r\n\r\n    //     this.UpdateChar()\r\n    // }\r\n\r\n    useEffect(() => {\r\n        UpdateChar()\r\n    }, [props.charId])\r\n\r\n    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n    // componentDidUpdate(prevProps) {\r\n    //     if (this.props.charId !== prevProps.charId) {\r\n    //         this.UpdateChar()\r\n    //     }\r\n    // }\r\n\r\n\r\n    const UpdateChar = () => {\r\n        \r\n        const {charId} = props\r\n        if (!charId) {\r\n            return\r\n        }\r\n\r\n        // onCharLoading()\r\n        clearError();\r\n        getCharacters(charId)\r\n            .then(onCharLoaded)\r\n            // .catch(onError)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n\r\n        setChar(char)\r\n        // setLoading(false)\r\n\r\n        // this.setState({ \r\n        //     char,\r\n        //     loading: false\r\n        //     })\r\n    }\r\n\r\n    // const onCharLoading = () => {\r\n        \r\n    //     // setLoading(true)\r\n    //     // this.setState({\r\n    //     //     loading: true\r\n    //     // })\r\n    // }\r\n    \r\n    // const onError = () => {\r\n    //     // return this.setState({\r\n    //     //     loading: false, \r\n    //     //     error: true\r\n    //     //     })\r\n    //     setError(true);\r\n    //     setLoading(false);\r\n    // }\r\n\r\n        \r\n        // const {char, error, loading} = this.state\r\n        \r\n        const skeleton = char || error || loading ? null : <Skeleton/>\r\n        const errorMessage = error ? <ErrorMessage/> : null\r\n        const spinner = loading ? <Spinner/> : null\r\n        const content = !(loading || error || !char) ? <View char = {char}/>  : null\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nconst View = ({char}) => {\r\n    const {description, name, thumbnail, wiki, homePage, comics} = char\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt=\"abyss\" style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homePage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {\r\n                    \r\n                    comics.map((item, i)=> {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return\r\n                        return (<li className=\"char__comics-item\" key={i} >\r\n                            {item.name}\r\n                        </li>)\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\n\r\nimport ErrorMessage from \"../error/error\";\r\n\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n    \r\n    componentDidCatch(prevError) {\r\n        console.log(prevError)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n    render () {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\n\r\nimport ErrorBoundary from \"../components/ErrorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../resources/img/vision.png';\r\n\r\nconst MainPages = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null)\r\n    \r\n    const onSelectedChar = (id) => {\r\n        setChar(id)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <ErrorBoundary>\r\n                <RandomChar />  \r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onSelectedChar = {onSelectedChar}/>\r\n                </ErrorBoundary>\r\n\r\n                <ErrorBoundary>\r\n                    <CharInfo charId ={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default MainPages;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import './comicsList.scss';\r\nimport uw from '../../resources/img/UW.png';\r\nimport xMen from '../../resources/img/x-men.png';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [offset, setOffset] = useState(8);\r\n    const [comicsList, setNewComicsList] = useState([]);\r\n    const [loadSpinner, setLoadSpinner] = useState(true)\r\n\r\n    const {getComics, loading} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequestNewListComcics()\r\n    }, []);\r\n    \r\n    const onRequestNewListComcics = () => {\r\n        setOffset(offset => offset + 8)\r\n        getComics(offset)\r\n        .then(setNewComicsList)\r\n    }\r\n\r\n    const activeRed = useRef([]);\r\n\r\n\r\n    const onFocusItem = (id) => {\r\n        activeRed.current.forEach(items => {items.classList.remove('comics__item-img__selected')})\r\n        activeRed.current[id].classList.add('comics__item-img__selected')\r\n        activeRed.current[id].focus();\r\n    }\r\n\r\n    const getNewComics = () => {\r\n        onRequestNewListComcics()\r\n        console.log(offset)\r\n        \r\n    }\r\n\r\n    const renderComcicsList = (comics) => {\r\n        // console.log(comics)\r\n        const listOfComcics = comics.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.img === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'scale-down'};\r\n            }\r\n            return(\r\n                <li className=\"comics__item\" \r\n                    key={i}\r\n                    // ref={(el) => activeRed.current[i] = el}\r\n                    // onMouseEnter={() => onFocusItem(i)}\r\n                    >\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.img} alt={item.alt} className=\"comics__item-img\" style={imgStyle}\r\n                            ref={(el) => activeRed.current[i] = el}\r\n                            onMouseEnter={() => onFocusItem(i)}\r\n                        />\r\n                        <div className=\"comics__item-name\">{item.title.toUpperCase()}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {listOfComcics}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    const comics = renderComcicsList(comicsList);\r\n    const spinner = loading && loadSpinner ? <Spinner /> : null;\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {/* <ul className=\"comics__grid\"> */}\r\n                {comics}\r\n                {spinner}\r\n                {/* <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n                        <div className=\"comics__item-price\">9.99$</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\r\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n                        <div className=\"comics__item-price\">9.99$</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\r\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n                        <div className=\"comics__item-price\">9.99$</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\r\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\r\n                        <div className=\"comics__item-price\">9.99$</div>\r\n                    </a>\r\n                </li>\r\n                <li className=\"comics__item\">\r\n                    <a href=\"#\">\r\n                        <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\r\n                        <div className=\"comics__item-price\">NOT AVAILABLE</div>\r\n                    </a>\r\n                </li> */}\r\n            {/* </ul> */}\r\n            <button className=\"button button__main button__long\"\r\n                onClick={() => getNewComics()}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/UW.422636b4.png\";","export default __webpack_public_path__ + \"static/media/x-men.41b39e19.png\";","import AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary/ErrorBoundary\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ErrorBoundary>\r\n                <ComicsList />\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../components/error/error\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <>\r\n            <ErrorMessage />\r\n            <p style={{textAlign : 'center', fontWeight : 'bold', fontSize : '24px'}}>Page doesn't exist</p>\r\n            <Link style={{display : 'block', textAlign : 'center', fontSize : '24px', fontWeight : 'bold', marginTop : '30px'}} to='/'>Back to main page</Link>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Page404","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../../components/error/error';\r\nimport Spinner from '../../components/spinner/Spinner';\r\n\r\n\r\nimport AppBanner from '../../components/appBanner/AppBanner';\r\nimport './singleComic.scss';\r\n// import xMen from '../../resources/img/x-men.png';\r\n\r\nconst SingleComic = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComicPage()\r\n    }, [comicId])\r\n\r\n    const updateComicPage = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        // console.log(comic)\r\n        return setComic(comic)\r\n    }\r\n\r\n\r\n    // console.log(getComic())\r\n    // const {} = getComic;\r\n \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <RenderComicView comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst RenderComicView = ({comic}) => {\r\n    const {descr, id, img, lang, pageCount, price, title} = comic;\r\n    console.log(comic)\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n        if (img === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n            imgStyle = {'objectFit' : 'scale-down'};\r\n        }\r\n    return (\r\n        \r\n        <div className=\"single-comic\">\r\n            <img src={img} alt={title} style={imgStyle} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{descr}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">{`Language: ${{lang}}`}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default SingleComic;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\n\r\nimport { MainPages, ComicsPage, Page404, SingleComic } from '../../pages'\r\n\r\n\r\nconst App = () => {    \r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                {/* <MainPages /> */}\r\n                <main>\r\n                    <Routes>\r\n                        <Route path='/' element={<MainPages />}/>   \r\n                        <Route path='/comics' element={<ComicsPage />} />\r\n                        <Route path=\"/comics/:comicId\" element={<SingleComic/>} />\r\n                        <Route path= '*' element = {<Page404 />}/>\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n// \"homepage\" : \"https://toshapa.github.io/udemy_react_002/\",  --openssl-legacy-provider start\r\n\r\nexport default App;","import React from 'react';\r\nimport { ReactDOM, createRoot } from 'react-dom/client'; \r\nimport App from './components/app/App';\r\n\r\nimport './style/style.scss';\r\n\r\n\r\ncreateRoot(document.getElementById('root'))\r\n  .render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n"],"sourceRoot":""}